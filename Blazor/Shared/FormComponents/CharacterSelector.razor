@inherits CharacterSelectorBase

@if (PCs.Count > 0)
{
    <FormGroup>
        <BlazorLabel For="CharacterSelector">Character</BlazorLabel>
        <Dropdown Id="CharacterSelector" IsOpen="@IsOpen">
            <DropdownToggle @onclick="@OnClick">@((PCs.Count > 0 && CharacterID > 0) ? PCs.Find(x => x.ID == CharacterID).Name : (CharacterID == -1 ? "Unchanged" : "Loading..."))</DropdownToggle>
            <DropdownMenu IsOpen="@IsOpen">
                @foreach (var s in PCs)
                {
                    <DropdownItem @key="@s.ID" @onclick="@(async (e) => await CharacterSelected(s.ID))">@s.Name</DropdownItem>
    }
            </DropdownMenu>
        </Dropdown>
    </FormGroup>
}
else
{
    <p>You do not have any characters on this server: you can't send any message.</p>
}

@code {
    private bool IsOpen = false;

    private void OnClick(UIMouseEventArgs e)
    {
        IsOpen = !IsOpen;
        StateHasChanged();
    }

    protected async Task CharacterSelected(int newSelection)
    {
        if (newSelection != CharacterID)
        {
            CharacterID = newSelection;
            await CharacterIDChanged.InvokeAsync(CharacterID);
        }
        IsOpen = false;
    }
}