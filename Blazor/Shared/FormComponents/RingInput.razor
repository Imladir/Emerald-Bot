@using EmeraldBot.Model.Characters

<Container style="width: 300px;">
    <Row>
        <BlazorCol></BlazorCol>
        <BlazorCol style="position: relative;">
            <BlazorStrap.Image Alignment="Alignment.Right" src="img/Earth.png" style="width: 72px; height: 72px;" />
            <input type="number" min="1" max="9" @bind="@Earth" style="width: 30px; position: absolute; left: 65px; top: 50px; z-index: 10;" />
        </BlazorCol>
        <BlazorCol style="position: relative;">
            <BlazorStrap.Image Alignment="Alignment.Left" src="img/Air.png" style="width: 72px; height: 72px;" />
            <input type="number" min="1" max="9" @bind="@Air" style="width: 30px; position: absolute; left: 5px; top: 50px; z-index: 10;" />
        </BlazorCol>
        <BlazorCol></BlazorCol>
    </Row>
    <Row>
        <BlazorCol style="position: relative;">
            <BlazorStrap.Image Alignment="Alignment.Center" src="img/Fire.png" style="width: 72px; height: 72px;" />
            <input type="number" min="1" max="9" @bind="@Fire" style="width: 30px; position: absolute; left: 85px; top: 30px; z-index: 10;" />
        </BlazorCol>
        <BlazorCol style="position: relative;">
            <BlazorStrap.Image Alignment="Alignment.Center" src="img/Water.png" style="width: 72px; height: 72px;" />
            <input type="number" min="1" max="9" @bind="@Water" style="width: 30px; position: absolute; left: 35px; top: 30px; z-index: 10;" />
        </BlazorCol>
    </Row>
    <Row>
        <BlazorCol style="position: relative;">
            <BlazorStrap.Image Alignment="Alignment.Center" src="img/void.png" style="width: 72px; height: 72px;" />
            <input type="number" min="1" max="9" @bind="@Void" style="width: 30px; position: absolute; left: 135px; top: -10px; z-index: 10;" />
        </BlazorCol>
    </Row>
</Container>

@code {
    [Parameter] private EventCallback<ICollection<CharacterRing>> RingsChanged { get; set; }
    [Parameter] private ICollection<CharacterRing> Rings { get; set; }
    private string Air { get { return $"{Rings.Single(x => x.Ring.Name.Equals("Air")).Value}"; } set { Rings.Single(x => x.Ring.Name.Equals("Air")).Value = int.Parse(value); } }
    private string Earth { get { return $"{Rings.Single(x => x.Ring.Name.Equals("Earth")).Value}"; } set { Rings.Single(x => x.Ring.Name.Equals("Earth")).Value = int.Parse(value); } }
    private string Fire { get { return $"{Rings.Single(x => x.Ring.Name.Equals("Fire")).Value}"; } set { Rings.Single(x => x.Ring.Name.Equals("Fire")).Value = int.Parse(value); } }
    private string Void { get { return $"{Rings.Single(x => x.Ring.Name.Equals("Void")).Value}"; } set { Rings.Single(x => x.Ring.Name.Equals("Void")).Value = int.Parse(value); } }
    private string Water { get { return $"{Rings.Single(x => x.Ring.Name.Equals("Water")).Value}"; } set { Rings.Single(x => x.Ring.Name.Equals("Water")).Value = int.Parse(value); } }

}