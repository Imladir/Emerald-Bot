@page  "/advantages/{id:int}/delete"
@using EmeraldBot.Model
@using EmeraldBot.Model.Characters
@using EmeraldBot.Model.Game

@inject EmeraldBotContext _ctx;
@inject IUriHelper _uri;


<RedirectToLoginIfNotAuthorized />

<h1>Advantage deletion</h1>
<p>Are you sure you want to delete the Advantage <em>@_advantage.Name</em>? There is no going back!</p>
@if (associatedPC > 0)
{
    <Alert Color="Color.Warning">Advantage <em>@_advantage.Name</em> is associated to @associatedPC character(s). Are you sure, sure?</Alert>
}
<BlazorButton Color="Color.Success" @onclick="@DeleteAdvantage">Yes, delete</BlazorButton>
<BlazorButton Color="Color.Danger" @onclick="@(() => { _uri.NavigateTo($"advantages/{_advantage.ID}"); })">No, go back</BlazorButton>

@code {
    [CascadingParameter(Name = "UserID")] protected int UserID { get; set; }
    [Parameter] private int id { get; set; }
    private Advantage _advantage;
    private int associatedPC;

    protected override void OnInit()
    {
        if (UserID == -1) return;
        _advantage = _ctx.Advantages.SingleOrDefault(x => x.ID == id);
        if (_advantage == null) _uri.NavigateTo($"advantages/");

        var isAdmin = _ctx.UserRoles.SingleOrDefault(x => x.User.ID == UserID && x.Role.Name.Equals("Admin")) == null;

        // Admin can do whatever
        if (!isAdmin)
        {
            // Otherwise GM is only able to delete an advantage if it's on the right server
            var isGM = _ctx.UserRoles.SingleOrDefault(x => x.User.ID == UserID && x.Role.Name.Equals("GM") && x.Server.ID == _advantage.Server.ID) == null;
            if (!isGM)
                _uri.NavigateTo($"advantages/{_advantage.ID}");
        }
        associatedPC = _ctx.PCs.Where(x => x.Advantages.Select(x => x.Advantage.ID).Contains(_advantage.ID)).Count();
    }

    private void DeleteAdvantage()
    {
        foreach (var apc in _ctx.Set<PCAdvantage>().Where(x => x.Advantage.ID == _advantage.ID)) _ctx.Set<PCAdvantage>().Remove(apc);
        _ctx.Set<Source>().Remove(_advantage.Source);
        _ctx.Advantages.Remove(_advantage);
        _ctx.SaveChanges();
        _uri.NavigateTo("advantages/");
    }
}